apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mifos-database
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mifos-database
  serviceName: "mifos-database"
  template:
    metadata:
      labels:
        app: mifos-database
    spec:
      containers:
      - name: mariadb
        image: '{{ $.Values.database.image }}'
        imagePullPolicy: IfNotPresent
        env:
        - name: MARIADB_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: mariadb
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: mariadb
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-root-password
              name: mariadb
        - name: MARIADB_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: mariadb
        ports:
        - containerPort: 3306
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - MYSQL_PWD=$MARIADB_ROOT_PASSWORD mariadb-admin -u root ping
          initialDelaySeconds: 30
          timeoutSeconds: 1
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - MYSQL_PWD=$MARIADB_ROOT_PASSWORD mariadb-admin -u root ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          requests:
            memory: "{{ $.Values.database.resources.requests.memory }}"
            cpu: "{{ $.Values.database.resources.requests.cpu }}"
          limits:
            memory: "5Gi"
            cpu: "2000m"
        volumeMounts:
        - mountPath: /var/lib/mysql/
          name: mariadb-data
        - mountPath: /etc/my.cnf.d/99-custom.cnf
          name: mariadb-config
          subPath: server-collation.cnf
          readOnly: true
        - mountPath: /docker-entrypoint-initdb.d/init.sql
          name: mariadb-config
          subPath: init.sql
          readOnly: true
      volumes:
      - name: mariadb-config
        configMap:
          name: mifos-db-config
  volumeClaimTemplates:
  - metadata:
      name: mariadb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ $.Values.database.storageclass }}
      resources:
        requests:
          storage: {{ $.Values.database.storage }}
